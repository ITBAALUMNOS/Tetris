*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  #include "spi.h"
    2:  #include "mc9s12xdp512.h"
    3:  
    4:  
    5:  // Driver Init
    6:  void init_SPI(void)
    7:  { 
*** EVALUATION ***

Function: init_SPI
Source  : C:\Users\R2D2\Desktop\TETRIS\Sources\spi.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=C:\Users\R2D2\Desktop\TETRIS;C:\Users\R2D2\Desktop\TETRIS\bin;C:\Users\R2D2\Desktop\TETRIS\prm;C:\Users\R2D2\Desktop\TETRIS\cmd;C:\Users\R2D2\Desktop\TETRIS\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Users\R2D2\Desktop\TETRIS\Sources\DP256Reg;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\R2D2\Desktop\TETRIS\bin -EnvTEXTPATH=C:\Users\R2D2\Desktop\TETRIS\bin -Lasm=%n.lst -Lasmc= -Ms -Ot -ObjN=C:\Users\R2D2\Desktop\TETRIS\TETRIS_Data\RAM\ObjectCode\spi.c.o -WmsgSd1106

    8:    // LOAD Out  (latch for MAX7219)
    9:  	DDRA |= (1 << 0);
  0000 4c0001       [4]     BSET  _DDRAB,#1
   10:  	PORTA |= (1 << 0);
  0003 4c0001       [4]     BSET  _PORTAB,#1
   11:    //PORTA &= ~(1 << 0);
   12:    // Bus Clock 40MHz
   13:    // set baud BusCLk / 40   1MHz  (MAX7219, up to 10MHz) 
   14:  	SPI0BR = ( 0b100 << SPI0BR_SPPR_BITNUM ) | ( 0b011 << SPI0BR_SPR_BITNUM );
  0006 cc5043       [2]     LDD   #20547
  0009 5b00         [2]     STAB  _SPI0BR
   15:    //latched on rising edge, data transferred msb first
   16:  	SPI0CR1=SPI0CR1_SPE_MASK | SPI0CR1_MSTR_MASK;
  000b 5a00         [2]     STAA  _SPI0CR1
   17:  	SPI0CR2=0x00;         
  000d 790000       [3]     CLR   _SPI0CR2
   18:  }
  0010 3d           [5]     RTS   
   19:  
   20:  // Driver ISR
   21:  void putwspi0 (unsigned int word)
   22:  {
*** EVALUATION ***

Function: putwspi0
Source  : C:\Users\R2D2\Desktop\TETRIS\Sources\spi.c
Options : -CPUHCS12X -D__NO_FLOAT__ -Env"GENPATH=C:\Users\R2D2\Desktop\TETRIS;C:\Users\R2D2\Desktop\TETRIS\bin;C:\Users\R2D2\Desktop\TETRIS\prm;C:\Users\R2D2\Desktop\TETRIS\cmd;C:\Users\R2D2\Desktop\TETRIS\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Users\R2D2\Desktop\TETRIS\Sources\DP256Reg;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\R2D2\Desktop\TETRIS\bin -EnvTEXTPATH=C:\Users\R2D2\Desktop\TETRIS\bin -Lasm=%n.lst -Lasmc= -Ms -Ot -ObjN=C:\Users\R2D2\Desktop\TETRIS\TETRIS_Data\RAM\ObjectCode\spi.c.o -WmsgSd1106

  0000 6cab         [2]     STD   5,-SP
   23:    char high,low,temp;
   24:  	high = (char)(word >> 8);
  0002 e680         [3]     LDAB  0,SP
  0004 6b83         [2]     STAB  3,SP
   25:  	low = (char)word;
  0006 e681         [3]     LDAB  1,SP
  0008 6b82         [2]     STAB  2,SP
   26:  	//HC12 is BIG ENDIAN	  
   27:  	PORTA &= ~(1 << 0); 
  000a 4d0001       [4]     BCLR  _PORTAB,#1
   28:  	//PORTA |= (1 << 0); 	    
   29:    while(!(SPI0SR & SPI0SR_SPTEF_MASK)); 	/* wait until write is permissible */
  000d 4f0020fc     [4]     BRCLR _SPI0SR,#32,*+0 ;abs = 000d
   30:    SPI0DR = high;             	          /* output HIGH BYTE to the SPI */
  0011 e683         [3]     LDAB  3,SP
  0013 5b00         [2]     STAB  _SPI0DR
   31:    while(!(SPI0SR & SPI0SR_SPIF_MASK));  	/* wait until write operation is complete */
  0015 4f0080fc     [4]     BRCLR _SPI0SR,#128,*+0 ;abs = 0015
   32:    while(!(SPI0SR & SPI0SR_SPTEF_MASK)); 	/* wait until write is permissible */
  0019 4f0020fc     [4]     BRCLR _SPI0SR,#32,*+0 ;abs = 0019
   33:    SPI0DR = low;              	          /* output LOW BYTE to the SPI */
  001d e682         [3]     LDAB  2,SP
  001f 5b00         [2]     STAB  _SPI0DR
   34:    while(!(SPI0SR & SPI0SR_SPIF_MASK));  	/* wait until write operation is complete */
  0021 4f0080fc     [4]     BRCLR _SPI0SR,#128,*+0 ;abs = 0021
   35:    temp 	= SPI0DR;	                        /* clear the SPIF flag */
  0025 d600         [3]     LDAB  _SPI0DR
  0027 6b84         [2]     STAB  4,SP
   36:  	PORTA |= (1 << 0); 
  0029 4c0001       [4]     BSET  _PORTAB,#1
   37:  	//PORTA &= ~(1 << 0);  
   38:  	_asm NOP;
  002c a7           [1]     NOP   
   39:  	_asm NOP;
  002d a7           [1]     NOP   
   40:  	_asm NOP;
  002e a7           [1]     NOP   
   41:  	_asm NOP;
  002f a7           [1]     NOP   
   42:  	_asm NOP;
  0030 a7           [1]     NOP   
   43:  	_asm NOP;
  0031 a7           [1]     NOP   
   44:  	_asm NOP;
  0032 a7           [1]     NOP   
   45:  	_asm NOP;
  0033 a7           [1]     NOP   
   46:  	_asm NOP;
  0034 a7           [1]     NOP   
   47:  	_asm NOP;
  0035 a7           [1]     NOP   
   48:  }
  0036 1b85         [2]     LEAS  5,SP
  0038 3d           [5]     RTS   
